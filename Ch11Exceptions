CH 11 EXCEPTIONS

- A 'try/catch' block tells the compiler that you know an exceptional thing could happen in the method you're calling, and that you're prepared to handle it.

Example: 

import javax.sound.midi*;

public class MusicTest1 {
	public void play() {

		try {
			Sequencer sequencer = MidiSystem.getSequencer();
			System.out.println("Successfully got a sequencer.");
		} catch(MidiUnavailableException ex) {
			System.out.println("Bummer");
		}
	}

	public static void main(String [] args) {
		MusicTest1 mt = new MusicTest();
		mt.play();
	}
}


- An exception is an object of type Exception.

- Because an Exception is an object, what you 'catch' is an object. 


- One method will catch what another method throws. An exception is always thrown back to the caller. 

- The method that throws has to declare that it might throw the exception. 


Example: 

public void crossFingers() {
	try {
		anObject.takeRisk();
	} catch (BadException ex) {
		System.out.println("Arrgh!");
		ex.printStackTrace();
	}
}

public void takeRisk() throws BadException {
		if (abandonAllHope) {
			throw new BadException(); 
		}
}



